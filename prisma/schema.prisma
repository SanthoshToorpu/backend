// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the User model
model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  email     String   @unique
  // Add more user-related fields as needed
  pets      Pet[]
  fines     Fine[]
  isAdmin   Boolean  @default(false)
}

// Define the Pet model
// Define the Pet model
model Pet {
  id          Int          @id @default(autoincrement())
  name        String
  breed       String
  age         Int
  ownerId     Int
  owner       User         @relation(fields: [ownerId], references: [id])
  petTracker  PetTracker?  // Each pet has a single tracker
  fines       Fine[]       // Add fines field to associate with fines
  fineAmount  Float?       // Add fine amount field
  isPaid      Boolean?     // Add isPaid field to represent payment status
}


// Define the Fine model
// Define the Fine model
model Fine {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  amount    Float
  reason    String
  isPaid    Boolean  @default(false)
  issuedAt  DateTime @default(now())
  petId     Int      // Add petId field to associate with pet
  pet       Pet      @relation(fields: [petId], references: [id])
}


// Define the PetTracker model for tracking pet locations
model PetTracker {
  id        Int      @id @default(autoincrement())
  petId     Int      @unique
  pet       Pet      @relation(fields: [petId], references: [id])
  latitude  Float
  longitude Float
  timestamp DateTime
}

